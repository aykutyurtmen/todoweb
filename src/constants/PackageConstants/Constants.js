import React from 'react'

export const Constants = {
  inputValue: {
    en: {
      enabled: { name: 'Enabled', value: 'enabled' },
      disabled: { name: 'Disabled', value: 'disabled' },
      yesBoolean: { name: 'Yes', value: true },
      yesText: { name: 'Yes', value: 'yes' },
      noBoolean: { name: 'No', value: false },
      noText: { name: 'No', value: 'no' },
      english: { value: 'en', name: 'English' },
      portuguese: { value: 'pt', name: 'Portuguese' },
      french: { value: 'fr', name: 'French' },
      spanish: { value: 'es', name: 'Spanish' },
      dedicated: { value: 'enabled', name: 'Dedicated' },
      inherit: { value: 'disabled', name: 'Inherit' },
      forward: { value: 'advanced', name: 'Forward' },
      arrears: { value: 'arrears', name: 'Arrears' },
      orderBased: { value: 'Order Based', name: 'Order Based' },
      usageBased: { value: 'Usage Based', name: 'Usage Based' },
    },
    fr: {
      enabled: { name: 'Enabled', value: 'enabled' },
      disabled: { name: 'Disabled', value: 'disabled' },
      yesBoolean: { name: 'Yes', value: true },
      yesText: { name: 'Yes', value: 'yes' },
      noBoolean: { name: 'No', value: false },
      noText: { name: 'No', value: 'no' },
      english: { value: 'en', name: 'English' },
      portuguese: { value: 'pt', name: 'Portuguese' },
      french: { value: 'fr', name: 'French' },
      spanish: { value: 'es', name: 'Spanish' },
      dedicated: { value: 'enabled', name: 'Dedicated' },
      inherit: { value: 'disabled', name: 'Inherit' },
      forward: { value: 'advanced', name: 'Forward' },
      arrears: { value: 'arrears', name: 'Arrears' },
      orderBased: { value: 'Order Based', name: 'Order Based' },
      usageBased: { value: 'Usage Based', name: 'Usage Based' },
    },
    meetMe: 'MeetMe',
    voiceMail: 'Voicemail',
    callGrabber: 'Call Grabber',
    smartOfficeCollaboration: 'Smart Office Collaboration',
    assignmentOrUse: [
      { name: 'MeetMe', value: 'MeetMe' },
      { name: 'Voicemail', value: 'Voicemail' },
      { name: 'Call Grabber', value: 'Call Grabber' },
      { name: 'Smart Office Collaboration', value: 'Smart Office Collaboration' },
    ],
  },
  fields: {
    initiation: {
      categoryId: { name: 'categoryId', label: { en: 'Category ID', fr: 'Customer Type' } },
      title: { name: 'title', label: { en: 'Title', fr: 'Business Name' } },
      description: { name: 'description', label: { en: 'Description', fr: 'Domain' } },
      productCode: { name: 'productCode', label: { en: 'Product Code', fr: 'Account Prime' } },
      patternCode: { name: 'patternCode', label: { en: 'Pattern Code', fr: 'PLM Prime' } },
      asortiCode: { name: 'asortiCode', label: { en: 'Asorti Code', fr: 'Operations Prime' } },
      sizeMin: { name: 'sizeMin', label: { en: 'Size Min', fr: 'Operations Prime' } },
      sizeMax: { name: 'sizeMax', label: { en: 'Size Max', fr: 'Operations Prime' } },
      price: { name: 'price', label: { en: 'Price', fr: 'Operations Prime' } },
      forRateOnly: { name: 'forRateOnly', label: { en: 'For Rate Only', fr: 'PLM Prime' } },
      rateAllowed: { name: 'rateAllowed', label: { en: 'Rate Allowed', fr: 'PLM Prime' } },
      aimCountries: { name: 'aimCountries', label: { en: 'Country', fr: 'PLM Prime' } },
    },
    userForm: {
      name: { name: 'name', label: { en: 'Name', fr: 'Customer Type' } },
      username: { name: 'username', label: { en: 'Phone Number', fr: 'Business Name' } },
      email: { name: 'email', label: { en: 'E-Mail', fr: 'Domain' } },
      companyName: { name: 'companyName', label: { en: 'Company Name', fr: 'Account Prime' } },
      country: { name: 'country', label: { en: 'Country', fr: 'PLM Prime' } },
      city: { name: 'city', label: { en: 'City', fr: 'Operations Prime' } },
      password: { name: 'password', label: { en: 'Password', fr: 'Operations Prime' } },
    },
    identity: {
      classificationType: {
        name: 'classificationType',
        label: { en: 'Classification type', fr: 'Classification type' },
      },
      primaryContactName: {
        name: 'primaryContactName',
        label: { en: 'Primary Contact Name', fr: 'Primary Contact Name' },
      },
      primaryContactEmail: {
        name: 'primaryContactEmail',
        label: { en: 'Primary Contact Email', fr: 'Primary Contact Email' },
      },
      customerIdentifier: {
        name: 'customerIdentifier',
        label: { en: 'Customer Identifier', fr: 'Customer Identifier' },
      },
    },
    business: {
      currency: { name: 'currency', label: { en: 'Currency', fr: 'Currency' } },
      supplierCatalog: { name: 'supplierCatalog', label: { en: 'Supplier Catalog', fr: 'Supplier Catalog' } },
      maxOrderValue: { name: 'maxOrderValue', label: { en: 'Max. Order Value', fr: 'Max. Order Value' } },
      billing: { name: 'billing', label: { en: 'Billing', fr: 'Billing' } },
      billingModel: { name: 'billingModel', label: { en: 'Billing Model', fr: 'Billing Model' } },
      billingType: { name: 'billingType', label: { en: 'Billing Type', fr: 'Billing Type' } },
      prorating: { name: 'prorating', label: { en: 'Prorating', fr: 'Prorating' } },
      minCommit: { name: 'minCommit', label: { en: 'Min. Commit', fr: 'Min. Commit' } },
      minCommitValue: { name: 'minCommitValue', label: { en: 'Min. Commit Value', fr: 'Min. Commit Value' } },
      minCommitStart: { name: 'minCommitStart', label: { en: 'Min. Commit Start', fr: 'Min. Commit Start' } },
      autoAcceptance: { name: 'autoAcceptance', label: { en: 'Auto Acceptance', fr: 'Auto Acceptance' } },
      orderNotification: { name: 'orderNotification', label: { en: 'Order Notification', fr: 'Order Notification' } },
    },
    settings: {
      sftpTransfer: { name: 'sftpTransfer', label: { en: 'SFTP Transfer', fr: 'SFTP Transfer' } },
      clientManagement: { name: 'clientManagement', label: { en: 'Client Management', fr: 'Client Management' } },
      timezone: { name: 'timezone', label: { en: 'Timezone', fr: 'Timezone' } },
      eupLanguage: { name: 'eupLanguage', label: { en: 'EUP Language', fr: 'EUP Language' } },
      adminLanguage: { name: 'adminLanguage', label: { en: 'Admin Language', fr: 'Admin Language' } },
      pstnManagement: { name: 'pstnManagement', label: { en: 'PSTN Management', fr: 'PSTN Management' } },
      dnsBranding: { name: 'dnsBranding', label: { en: 'DNS Branding', fr: 'DNS Branding' } },
      portalBranding: { name: 'portalBranding', label: { en: 'Portal Branding', fr: 'Portal Branding' } },
      mandatorySiteAddress: {
        name: 'mandatorySiteAddress',
        label: { en: 'Mandatory Site Address', fr: 'Mandatory Site Address' },
      },
      singleSignOn: { name: 'singleSignOn', label: { en: 'Single Sign-on', fr: 'Single Sign-on' } },
      minLength: { name: 'minLength', label: { en: 'Min. Length', fr: 'Min. Length' } },
      minDigits: { name: 'minDigits', label: { en: 'Min. Digits', fr: 'Min. Digits' } },
      minCharacters: { name: 'minCharacters', label: { en: 'Min. Characters', fr: 'Min. Characters' } },
      minCapitalLetters: {
        name: 'minCapitalLetters',
        label: { en: 'Min. Capital Letters', fr: 'Min. Capital Letters' },
      },
      minSpecialCharacters: {
        name: 'minSpecialCharacters',
        label: { en: 'Min Special Characters', fr: 'Min. Special Characters' },
      },
      lockoutDuration: { name: 'lockoutDuration', label: { en: 'Lockout Duration', fr: 'Lockout Duration' } },
      maxFailedLogin: { name: 'maxFailedLogin', label: { en: 'Max Failed Login', fr: 'Max Failed Login' } },
      initReset: { name: 'initReset', label: { en: 'Initial Reset', fr: 'Initial Reset' } },
      enablePropertyFiltering: {
        name: 'enablePropertyFiltering',
        label: { en: 'Property Filtering', fr: 'Property Filtering' },
      },
      preventPreviousPassword: {
        name: 'preventPreviousPassword',
        label: { en: 'Prevent Previous Password', fr: 'Prevent Previous Password' },
      },
    },
    brandedUrls: {
      dnsName: { name: 'dnsName', label: { en: 'Name', fr: 'Name' } },
      fqdn: { name: 'fqdn', label: { en: 'URL', fr: 'URL' } },
      ipAddress: { name: 'ipAddress', label: { en: 'IP Address', fr: 'IP Address' } },
      division: { name: 'ssl.division', label: { en: 'Division', fr: 'Division' } },
      organization: { name: 'ssl.organization', label: { en: 'Organization', fr: 'Organization' } },
      locality: { name: 'ssl.locality', label: { en: 'Locality', fr: 'Locality' } },
      state: { name: 'ssl.state', label: { en: 'State', fr: 'State' } },
      country: { name: 'ssl.country', label: { en: 'Country', fr: 'Country' } },
      email: { name: 'ssl.email', label: { en: 'Approver E-Mail Address', fr: 'Approver E-Mail Address' } },
    },
    sipTrunks: {
      serviceNode: {
        serviceNode: { name: 'serviceNode', label: { en: 'Name', fr: 'Name' } },
        pstnProvider: { name: 'pstnProvider', label: { en: 'PSTN Provider', fr: 'PSTN Provider' } },
        contactName: { name: 'contactName', label: { en: 'Contact Name', fr: 'Contact Name' } },
        contactNumber: { name: 'contactNumber', label: { en: 'Contact Number', fr: 'Contact Number' } },
        ipAddress: { name: 'ipAddress', label: { en: 'IP Address', fr: 'IP Address' } },
        location: { name: 'location', label: { en: 'Location', fr: 'Location' } },
        equipment: { name: 'equipment', label: { en: 'Equipment', fr: 'Equipment' } },
        vendorOrModel: { name: 'vendorOrModel', label: { en: 'Vendor/Model', fr: 'Vendor/Model' } },
      },
      logicalGroups: {
        entityName: { name: 'entityName', label: { en: 'Entity Name', fr: 'Entity Name' } },
      },
    },
    accessNumbers: {
      assignmentOrUse: { name: 'assignmentOrUse', label: { en: 'Assignment/Use', fr: 'Assignment/Use' } },
      pstnDid: { name: 'pstnDid', label: { en: 'PSTN DID', fr: 'PSTN DID' } },
      location: { name: 'location', label: { en: 'Location', fr: 'Location' } },
      alias: { name: 'alias', label: { en: 'Alias', fr: 'Alias' } },
    },
    telephonyRoutes: {
      name: { name: 'name', label: { en: 'Name', fr: 'Name' } },
      description: { name: 'description', label: { en: 'Description', fr: 'Description' } },
      fromDigits: { name: 'fromDigits', label: { en: 'From digits', fr: 'From digits' } },
      toDigits: { name: 'toDigits', label: { en: 'To digits', fr: 'To digits' } },
      minDigits: { name: 'minDigits', label: { en: 'Min # of digits', fr: 'Min # of digits' } },
      maxDigits: { name: 'maxDigits', label: { en: 'Max # of digits', fr: 'Max # of digits' } },
      remove: { name: 'remove', label: { en: 'Remove', fr: 'Remove' } },
      prefix: { name: 'prefix', label: { en: 'Prefix', fr: 'Prefix' } },
      classOfServices: { name: 'classOfServices', label: { en: 'Class of service', fr: 'Class of service' } },
      logicalEntity: { name: 'logicalEntity', label: { en: 'Logical Entity', fr: 'Logical Entity' } },
      overrideName: { name: 'overrideName', label: { en: 'Override name', fr: 'Override name' } },
      overrideValue: { name: 'overrideValue', label: { en: 'Override Value', fr: 'Override Value' } },
      overrideChargeId: { name: 'overrideChargeId', label: { en: 'Override charge ID', fr: 'Override charge ID' } },
      overrideChargeIdValue: { name: 'overrideChargeIdValue', label: { en: 'Override Value', fr: '"Override Value' } },
    },
  },
  en: {
    addPartner: 'Add Partner',
    newPartnerDetails: 'Package',
    userDetails: 'User Details',
    userDetailsSubTitle: 'Provide the necessary information to update the user.',
    addSomeQuestion: 'Why don’t you ',
    addSome: 'add some.',
    necessaryDetails: 'Provide the necessary details.',
    subTitle: 'Provide the necessary information to create a new package.',
    remove: 'Remove',
    continue: 'Continue',
    close: 'Close',
    cancel: 'Cancel',
    save: 'Save',
    next: 'Next',
    send: 'Send',
    edit: 'Edit',
    delete: 'Delete',
    optional: '(Optional)',
    approve: 'Approve',
    saveAndSubmit: 'Save & Submit',
    saveAndContinue: 'Save & Continue',
    continueWithoutSaving: 'Continue without Saving',
    beginOnboarding: 'Begin onboarding',
    completeOnboarding: 'Complete Onboarding',
    continueOnboarding: 'Continue Onboarding',
    returnToOnboarding: 'Return to Onboarding Page',
    beginApproval: 'Begin Approval',
    continueApproval: 'Continue Approval',
    reviewApproval: 'Review Approval',
    reviewOnboarding: 'Review Onboarding',
    onboardingSection: 'Onboarding Section',
    ok: 'OK',
    reject: 'Reject',
    checkDetails: 'Check details before confirming.',
    footer: {
      once: 'Once you submit the form, an Account prime will take over and continue the onboarding process. Your dashboard will reflect the progress.',
      useButtonsRight: 'Please use the action buttons on right.',
      completeOnboardingInfo: 'To complete the onboarding please use the action button on right.',
      onboardingProcess: 'Your dashboard will reflect the progress of the new partner onboarding process.',
    },
    initiation: {
      initiation: 'Create a new package',
      initiationEdit: 'Edit package',
      packageDetails: 'Package Details',
      initiationUserDetails: 'User Details',
    },
    approval: {
      approval: 'Approval',
      generalInformation: 'General Information',
    },
    customerList: {
      overview: 'Overview',
      customers: 'Customers',
      status: 'Status',
      created: 'Date created',
      newCustomer: 'Do you want to onboard new customers?',
    },
    onboarding: {
      onboarding: 'Onboarding',
      newPartner: 'New Partner Onboarding',
      expect: 'What to Expect?',
      follow: 'Follow these steps to onboard a new partner.',
      step1: {
        name: 'Step 1',
        info: 'Basic partner details and hand off to Account prime.',
        tooltip: 'Start your onboarding with initial step.',
      },
      step2: {
        name: 'Step 2',
        info: 'Partner details, pricing and hand off to PLM prime.',
        tooltip: 'After completing initiation step, you can access and fill Setup Form.',
      },
      step3: {
        name: 'Step 3',
        info: 'PLM and OPS primes need to approve the details.',
        tooltip: 'After completing Setup step, you can see your Approval status.',
      },
      postOnboaring: {
        name: 'Post onboarding (NYA)',
        accountChanges: 'Account changes',
        info: 'Any changes after initial setup will go through approval by PLM prime.\n',
        tooltip: 'Currently not available.',
      },
    },
    confirm: {
      confirmSetup: 'Are you sure want to complete Setup? Once you saved, you cannot update the Initiation and Setup sections.',
      confirmNext: 'Do you want go to next Step?',
      confirmReject: 'Once you Reject, form status changes to Setup and customer can edit the form.',
      confirmApprove: 'Once you approve, the customer will be created at KBS Portal.',
      confirmCompleted: 'Please confirm that, all the provisioning is done and the customer is ready to use KBS services.',
      confirmDeleteComment: 'Are you sure you want to delete the comment?',
    },
    comment: {
      leaveAComment: 'Leave a Comment',
      comments: 'Comments',
      comment: 'Comment',
      checkDetails: 'Check details before confirming.',
      editYourComment: 'Please edit your comment',
      specific: 'Be as specific as possible.',
      mind: 'What\'s on your mind?',
    },
    setup: {
      setup: 'Setup',
      completeSetup: 'Complete Setup',
      saveForLater: 'Save for later',
    },
    business: {
      business: 'Business',
      businessDetails: 'Business Details',
    },
    identity: {
      identity: 'Identity',
      identityDetails: 'Identity Details',
    },
    settings: {
      settings: 'Settings',
      settingsDetails: 'Settings Details',
      securityDetails: 'Security Details',
      securityPolicy: 'Security Policy',
    },
    brandedUrls: {
      title: 'Branded URLs',
      singleTitle: 'Branded URL',
      drawerTitle: 'Add a Branded URL',
      emptyBrandedURls: 'You don’t have any Branded URLs.',
      sslTitle: 'HTTPS Certificate Information',
    },
    sipTrunks: {
      sipTrunks: 'SIP Trunks',
      serviceNode: {
        node: 'Node',
        serviceNodes: 'Service Nodes',
        serviceNode: 'Service Node',
        add: 'Add a Service Node',
        emptyNodesNotApproval: 'You don’t have any Service Nodes yet.',
        emptyNodesApproval: 'You don’t have any Service Nodes.',
      },
      logicalGroups: {
        logicalGroup: 'Logical Group',
        logicalGroups: 'Logical Groups',
        add: 'Add a Logical Group',
        emptyNotApproval: 'You don’t have any Logical Groups yet.',
        emptyApproval: 'You don’t have any Logical Groups.',
      },
    },
    accessNumbers: {
      accessNumbers: 'Access Numbers',
      accessNumber: 'Access Number',
      emptyApproval: 'You don’t have any Access Numbers.',
      emptyNotApproval: 'You don’t have any Access Numbers yet.',
      add: 'Add an Access Number',
    },
    telephonyRoutes: {
      title: 'Telephony Routes',
      singleTitle: 'Telephony Route',
      headerTitle: 'Add a Telephony Route',
      emptyRoutes: 'You don’t have any Telephony Routes.',
    },
    error: {
      required: 'This field is required.',
      invalidValue: 'Invalid value.',
      initiation: {
        businessName: {
          outOfRange: 'Business Name must be between 3 and 180 chars.',
        },
        domain: {
          invalid: 'Invalid Domain',
          outOfRange: 'Domain must be less than 60 characters.',
        },
        accountPrime: {
          outOfRange: 'Account Prime must be between 3 and 50 chars.',
        },
      },
      setup: {
        identity: {
          outOfRange: 'Primary Contact Name must be between 3 and 50 chars',
        },
        business: {
          maxOrderValue: {
            lesserOrEqual: 'Max. Order Value must be less than or equal to ',
          },
          minCommitValue: {
            lessThanOne: 'Please provide a valid  Min. Commit Value.',
            lesserOrEqual: 'Min. Commit Value must be less than or equal to ',
          },
        },
        settings: {
          minLength: {
            sumMinDigitsAndMinCharacters: 'Password Min Length must be bigger or equal to sum of minimum digits and minimum characters.',
            outOfRange: 'Min Length must be between 8 and 16.',
          },
          minDigits: {
            outOfRange: 'Min Digits must be between 0 and 10.',
          },
          minCharacters: {
            outOfRange: 'Min Characters must be between 0 and 10.',
            sumMinCapitalLettersAndMinSpecialCharacters: 'Min Capital Letters and Min Special Characters\' total must be less than Min Characters.',
          },
          minCapitalLetters: {
            outOfRange: 'Min Capital Letters must be between 0 and 10.',
          },
          minSpecialCharacters: {
            outOfRange: 'Min Special Characters must be between 0 and 10.',
          },
          maxFailedLogin: {
            outOfRange: 'Max Failed Login must be between 0 and 10.',
          },
        },
        brandedUrls: {
          fqdnSSLRequired: 'Please provide a valid URL with SSL protocol.',
          fqdnSSLNotRequired: 'Please provide a valid URL without any protocol.',
          invalidUrl: 'Invalid URL.',
          urlSize: 'URL must be less than 60 characters.',
          outOfRange: 'must be between 2 and 256 chars.',
        },
        accessNumber:{
          invalidAlias: 'Alias field can\'t exceed 50 characters',
          invalidPstn: 'Invalid PSTN',
        },
        sipTrunks: {
          serviceNode: {
            outOfRange: 'Service Node Name must be less than 50 chars.',
            unique: 'Service Node Name must be unique.',
          },
          logicalGroups: {
            unique: 'Entity Name must be unique.',
          },
        },
        telephonyRoutes: {
          emptyLogicalGroups: 'To set up Telephony Routes, you must add at least one Service Node and one Logical Group.',
          name: {
            lessOrEqualTo: 'Name should be less than or equal to 20 characters.',
          },
          description: {
            lessOrEqualTo: 'Name should be less than or equal to 100 characters.',
          },
          fromDigits: {
            notValid: 'From Digit value is not valid.',
            lessOrEqualTo: 'From digits should be less than or equal to To digits.',
            lengthNotMatch: 'From Digits and To Digits length must be match.',
          },
          toDigits: {
            notValid: 'To Digit value is not valid.',
            greaterOrEqualTo: 'To digits should be greater than or equal to From digits.',
            lengthNotMatch: 'From Digits and To Digits length must be match.',
          },
          minDigits: {
            greaterOrEqualTo: 'Min number of Digit should be greater than or equal to From/To digits length.',
            outOfRange: 'Min number of Digits can only be between 1 and 32.',
            notGreaterMaxNumberOfDigits: 'Min number of Digits can not be greater than Max number of Digits.',
          },
          maxDigits: {
            outOfRange: 'Max number of Digits can only be between 1 and 32.',
            greaterOrEqualTo: 'Max number of Digits should be greater than or equal to Min number of Digits.',
          },
          remove: {
            greaterThanMinDigits: 'Remove cannot be more than the minimum number of digits.',
          },
          prefix: {
            manipulation: 'Digit manipulations may cause number to exceed 32 digits in length.',
          },
          missingPlus: 'If one of the From Digits or To Digits field start with + sign, both of them must start with the plus sign. '
        },
      },
    },
  },
  fr: {
    addPartner: 'Add Partner',
    newPartnerDetails: 'New partner details',
    addSomeQuestion: 'Why don’t you ',
    addSome: 'add some.',
    necessaryDetails: 'Provide the necessary details.',
    subTitle: 'Provide the necessary information to onboard a new partner.',
    remove: 'Remove',
    continue: 'Continue',
    close: 'Close',
    cancel: 'Cancel',
    save: 'Save',
    next: 'Next',
    send: 'Send',
    edit: 'Edit',
    delete: 'Delete',
    optional: '(Optional)',
    approve: 'Approve',
    saveAndSubmit: 'Save & Submit',
    saveAndContinue: 'Save & Continue',
    continueWithoutSaving: 'Continue without Saving',
    beginOnboarding: 'Begin onboarding',
    completeOnboarding: 'Complete Onboarding',
    continueOnboarding: 'Continue Onboarding',
    returnToOnboarding: 'Return to Onboarding Page',
    beginApproval: 'Begin Approval',
    continueApproval: 'Continue Approval',
    reviewApproval: 'Review Approval',
    reviewOnboarding: 'Review Onboarding',
    onboardingSection: 'Onboarding Section',
    ok: 'OK',
    reject: 'Reject',
    checkDetails: 'Check details before confirming.',
    footer: {
      once: 'Once you submit the form, an Account prime will take over and continue the onboarding process. Your dashboard will reflect the progress.',
      useButtonsRight: 'Please use the action buttons on right.',
      completeOnboardingInfo: 'To complete the onboarding please use the action button on right.',
      onboardingProcess: 'Your dashboard will reflect the progress of the new partner onboarding process.',
    },
    initiation: {
      initiation: 'Initiation',
    },
    approval: {
      approval: 'Approval',
      generalInformation: 'General Information',
    },
    customerList: {
      overview: 'Overview',
      customers: 'Customers',
      status: 'Status',
      created: 'Date created',
      newCustomer: 'Do you want to onboard new customers?',
    },
    onboarding: {
      onboarding: 'Onboarding',
      newPartner: 'New Partner Onboarding',
      expect: 'What to Expect?',
      follow: 'Follow these steps to onboard a new partner.',
      step1: {
        name: 'Step 1',
        info: 'Basic partner details and hand off to Account prime.',
        tooltip: 'Start your onboarding with initial step.',
      },
      step2: {
        name: 'Step 2',
        info: 'Partner details, pricing and hand off to PLM prime.',
        tooltip: 'After completing initiation step, you can access and fill Setup Form.',
      },
      step3: {
        name: 'Step 3',
        info: 'PLM and OPS primes need to approve the details.',
        tooltip: 'After completing Setup step, you can see your Approval status.',
      },
      postOnboaring: {
        name: 'Post onboarding (NYA)',
        accountChanges: 'Account changes',
        info: 'Any changes after initial setup will go through approval by PLM prime.\n',
        tooltip: 'Currently not available.',
      },
    },
    confirm: {
      confirmSetup: 'Are you sure want to complete Setup? Once you saved, you cannot update the Initiation and Setup sections.',
      confirmNext: 'Do you want go to next Step?',
      confirmReject: 'Once you Reject, form status changes to Setup and customer can edit the form.',
      confirmApprove: 'Once you approve, the customer will be created at KBS Portal.',
      confirmCompleted: 'Please confirm that, all the provisioning is done and the customer is ready to use KBS services.',
      confirmDeleteComment: 'Are you sure you want to delete the comment?',
    },
    comment: {
      leaveAComment: 'Leave a Comment',
      comments: 'Comments',
      comment: 'Comment',
      checkDetails: 'Check details before confirming.',
      editYourComment: 'Please edit your comment',
      specific: 'Be as specific as possible.',
      mind: 'What\'s on your mind?',
    },
    setup: {
      setup: 'Setup',
      completeSetup: 'Complete Setup',
      saveForLater: 'Save for later',
    },
    business: {
      business: 'Business',
      businessDetails: 'Business Details',
    },
    identity: {
      identity: 'Identity',
      identityDetails: 'Identity Details',
    },
    settings: {
      settings: 'Settings',
      settingsDetails: 'Settings Details',
      securityDetails: 'Security Details',
      securityPolicy: 'Security Policy',
    },
    brandedUrls: {
      title: 'Branded URLs',
      singleTitle: 'Branded URL',
      drawerTitle: 'Add a Branded URL',
      emptyBrandedURls: 'You don’t have any Branded URLs.',
      sslTitle: 'HTTPS Certificate Information',
    },
    sipTrunks: {
      sipTrunks: 'SIP Trunks',
      serviceNode: {
        node: 'Node',
        serviceNodes: 'Service Nodes',
        serviceNode: 'Service Node',
        add: 'Add a Service Node',
        emptyNodesNotApproval: 'You don’t have any Service Nodes yet.',
        emptyNodesApproval: 'You don’t have any Service Nodes.',
      },
      logicalGroups: {
        logicalGroup: 'Logical Group',
        logicalGroups: 'Logical Groups',
        add: 'Add a Logical Group',
        emptyNotApproval: 'You don’t have any Logical Groups yet.',
        emptyApproval: 'You don’t have any Logical Groups.',
      },
    },
    accessNumbers: {
      accessNumbers: 'Access Numbers',
      accessNumber: 'Access Number',
      emptyApproval: 'You don’t have any Access Numbers.',
      emptyNotApproval: 'You don’t have any Access Numbers yet.',
      add: 'Add an Access Number',
    },
    telephonyRoutes: {
      title: 'Telephony Routes',
      singleTitle: 'Telephony Route',
      headerTitle: 'Add a Telephony Route',
      emptyRoutes: 'You don’t have any Telephony Routes.',
    },
    error: {
      required: 'This field is required.',
      invalidValue: 'Invalid value.',
      initiation: {
        businessName: {
          outOfRange: 'Business Name must be between 3 and 180 chars.',
        },
        domain: {
          invalid: 'Invalid Domain',
          outOfRange: 'Domain must be less than 60 characters.',
        },
        accountPrime: {
          outOfRange: 'Account Prime must be between 3 and 50 chars.',
        },
      },
      setup: {
        identity: {
          outOfRange: 'Primary Contact Name must be between 3 and 50 chars',
        },
        business: {
          maxOrderValue: {
            lesserOrEqual: 'Max. Order Value must be less than or equal than ',
          },
          minCommitValue: {
            lessThanOne: 'Please provide a valid  Min. Commit Value.',
            lesserOrEqual: 'Min. Commit Value must be less than ',
          },
        },
        settings: {
          minLength: {
            sumMinDigitsAndMinCharacters: 'Password Min Length must be bigger or equal to sum of minimum digits and minimum characters.',
            outOfRange: 'Min Length must be between 8 and 16.',
          },
          minDigits: {
            outOfRange: 'Min Digits must be between 0 and 10.',
          },
          minCharacters: {
            outOfRange: 'Min Characters must be between 0 and 10.',
            sumMinCapitalLettersAndMinSpecialCharacters: 'Min Capital Letters and Min Special Characters\' total must be less than Min Characters.',
          },
          minCapitalLetters: {
            outOfRange: 'Min Capital Letters must be between 0 and 10.',
          },
          minSpecialCharacters: {
            outOfRange: 'Min Special Characters must be between 0 and 10.',
          },
          maxFailedLogin: {
            outOfRange: 'Max Failed Login must be between 0 and 10.',
          },
        },
        brandedUrls: {
          fqdnSSLRequired: 'Please provide a valid URL with SSL protocol.',
          fqdnSSLNotRequired: 'Please provide a valid URL without any protocol.',
          invalidUrl: 'Invalid URL.',
          urlSize: 'URL must be less than 60 characters.',
          outOfRange: 'must be between 2 and 256 chars.',
        },
        accessNumber:{
          invalidAlias: 'Alias field can\'t exceed 50 characters',
          invalidPstn: 'Invalid PSTN DID',
        },
        sipTrunks: {
          serviceNode: {
            outOfRange: 'Service Node Name must be less than 50 chars.',
            unique: 'Service Node Name must be unique.',
          },
          logicalGroups: {
            unique: 'Entity Name must be unique.',
          },
        },
        telephonyRoutes: {
          emptyLogicalGroups: 'To set up Telephony Routes, you must add at least one Service Node and one Logical Group.',
          name: {
            lessOrEqualTo: 'Name should be less than or equal to 20 characters.',
          },
          description: {
            lessOrEqualTo: 'Name should be less than or equal to 100 characters.',
          },
          fromDigits: {
            notValid: 'From Digit value is not valid.',
            lessOrEqualTo: 'From digits should be less than or equal to To digits.',
          },
          toDigits: {
            notValid: 'To Digit value is not valid.',
            greaterOrEqualTo: 'To digits should be greater than or equal to From digits.',
          },
          minDigits: {
            greaterOrEqualTo: 'Min number of Digit should be greater than or equal to From/To digits length.',
            outOfRange: 'Min number of Digits can only be between 1 and 32.',
            notGreaterMaxNumberOfDigits: 'Min number of Digits can not be greater than Max number of Digits.',
          },
          maxDigits: {
            outOfRange: 'Max number of Digits can only be between 1 and 32.',
            greaterOrEqualTo: 'Max number of Digits should be greater than or equal to Min number of Digits.',
          },
          remove: {
            greaterThanMinDigits: 'Remove cannot be more than the minimum number of digits.',
          },
          prefix: {
            manipulation: 'Digit manipulations may cause number to exceed 32 digits in length.',
          },
        },
      },
    },
  },


}